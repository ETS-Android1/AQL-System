/* Generated By:JavaCC: Do not edit this line. QuestionParser.java */
package de.foellix.aql.datastructure.handler;
import de.foellix.aql.datastructure.handler.QuestionHandler;

public class QuestionParser implements QuestionParserConstants {
  private QuestionHandler questionHandler = new QuestionHandler();

  public QuestionHandler getQuestionHandler()
  {
    return questionHandler;
  }

  final public void queries() throws ParseException {
  Token variable;
    questionHandler.startQueries();
    label_1:
    while (true) {
      questionHandler.startQuery();
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FILTER_OPERATOR:
      case OTHER_OPERATORS:
      case CUSTOM_OPERATORS:
      case SOIS1:
      case SOIS2:
      case STRING:
      case 21:
      case 23:
        query();
        break;
      case VARIABLE:
        variable = jj_consume_token(VARIABLE);
        jj_consume_token(20);
          questionHandler.setVariable(variable.toString());
        query();
        break;
      default:
        jj_la1[0] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      questionHandler.endQuery();
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FILTER_OPERATOR:
      case OTHER_OPERATORS:
      case CUSTOM_OPERATORS:
      case VARIABLE:
      case SOIS1:
      case SOIS2:
      case STRING:
      case 21:
      case 23:
        ;
        break;
      default:
        jj_la1[1] = jj_gen;
        break label_1;
      }
    }
    questionHandler.endQueries();
    jj_consume_token(0);
  }

  final public void query() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case FILTER_OPERATOR:
    case OTHER_OPERATORS:
    case CUSTOM_OPERATORS:
    case SOIS1:
    case SOIS2:
    case STRING:
    case 23:
    questionHandler.deactivateBrackets();
      questionOrVariable();
      break;
    case 21:
      questionHandler.activateBrackets();
      jj_consume_token(21);
      questionOrVariable();
      jj_consume_token(22);
      break;
    default:
      jj_la1[2] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void questionOrVariable() throws ParseException {
  Token variable;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case FILTER_OPERATOR:
    case OTHER_OPERATORS:
    case CUSTOM_OPERATORS:
    case SOIS1:
    case SOIS2:
    case STRING:
      question();
      break;
    case 23:
      jj_consume_token(23);
      variable = jj_consume_token(VARIABLE);
      questionHandler.getVariable(variable.toString());
      break;
    default:
      jj_la1[3] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void question() throws ParseException {
  Token endingSymbol;
    questionHandler.startQuestion();
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SOIS1:
    case SOIS2:
      defaultQuestion();
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FEATURING:
          questionHandler.startFeatures();
        jj_consume_token(FEATURING);
        features();
          questionHandler.endFeatures();
        break;
      default:
        jj_la1[4] = jj_gen;
        ;
      }
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case USES:
          questionHandler.startUses();
        jj_consume_token(USES);
        uses();
          questionHandler.endUses();
        break;
      default:
        jj_la1[5] = jj_gen;
        ;
      }
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case WITH:
          questionHandler.startWiths();
        jj_consume_token(WITH);
        withs();
          questionHandler.endWiths();
        break;
      default:
        jj_la1[6] = jj_gen;
        ;
      }
      break;
    case STRING:
      loadingQuestion();
      break;
    case FILTER_OPERATOR:
    case OTHER_OPERATORS:
    case CUSTOM_OPERATORS:
      operatorQuestion();
      break;
    default:
      jj_la1[7] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    endingSymbol = jj_consume_token(ENDING);
    questionHandler.endQuestion(endingSymbol.toString());
  }

  final public void features() throws ParseException {
    feature();
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 24:
      jj_consume_token(24);
      features();
      break;
    default:
      jj_la1[8] = jj_gen;
      ;
    }
  }

  final public void feature() throws ParseException {
  Token feature;
    if (jj_2_1(2)) {
      feature = jj_consume_token(STRING);
        questionHandler.addFeature(feature.toString());
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FILTER_OPERATOR:
      case OTHER_OPERATORS:
      case CUSTOM_OPERATORS:
      case SOIS1:
      case SOIS2:
      case STRING:
      case 21:
      case 23:
        questionHandler.startFeaturesQuery();
        query();
        questionHandler.endFeaturesQuery();
        break;
      default:
        jj_la1[9] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
  }

  final public void uses() throws ParseException {
    use();
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 24:
      jj_consume_token(24);
      uses();
      break;
    default:
      jj_la1[10] = jj_gen;
      ;
    }
  }

  final public void use() throws ParseException {
  Token use;
    if (jj_2_2(2)) {
      use = jj_consume_token(STRING);
        questionHandler.addUse(use.toString());
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FILTER_OPERATOR:
      case OTHER_OPERATORS:
      case CUSTOM_OPERATORS:
      case SOIS1:
      case SOIS2:
      case STRING:
      case 21:
      case 23:
        questionHandler.startUsesQuery();
        query();
        questionHandler.endUsesQuery();
        break;
      default:
        jj_la1[11] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
  }

  final public void withs() throws ParseException {
    with();
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 24:
      jj_consume_token(24);
      withs();
      break;
    default:
      jj_la1[12] = jj_gen;
      ;
    }
  }

  final public void with() throws ParseException {
  Token key;
  Token value;
    questionHandler.startWith();
    if (jj_2_3(2)) {
      key = jj_consume_token(STRING);
        questionHandler.setWithKey(key.toString());
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FILTER_OPERATOR:
      case OTHER_OPERATORS:
      case CUSTOM_OPERATORS:
      case SOIS1:
      case SOIS2:
      case STRING:
      case 21:
      case 23:
        questionHandler.startWithKeyQuery();
        query();
        questionHandler.endWithKeyQuery();
        break;
      default:
        jj_la1[13] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    jj_consume_token(20);
    if (jj_2_4(2)) {
      value = jj_consume_token(STRING);
        questionHandler.setWithValue(value.toString());
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FILTER_OPERATOR:
      case OTHER_OPERATORS:
      case CUSTOM_OPERATORS:
      case SOIS1:
      case SOIS2:
      case STRING:
      case 21:
      case 23:
        questionHandler.startWithValueQuery();
        query();
        questionHandler.endWithValueQuery();
        break;
      default:
        jj_la1[14] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    questionHandler.endWith();
  }

  final public void questions() throws ParseException {
    query();
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 24:
      jj_consume_token(24);
      questions();
      break;
    default:
      jj_la1[15] = jj_gen;
      ;
    }
  }

  final public void loadingQuestion() throws ParseException {
  Token file;
    questionHandler.startLoadingQuestion();
    file = jj_consume_token(STRING);
    questionHandler.addAnswer(file.toString());
    questionHandler.endLoadingQuestion();
  }

  final public void operatorQuestion() throws ParseException {
  Token operator;
  Token key;
  Token value;
  Token soi;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case OTHER_OPERATORS:
      operator = jj_consume_token(OTHER_OPERATORS);
        questionHandler.startOperatorQuestion(operator.toString());
      jj_consume_token(25);
        questionHandler.startInnerOperatorQuestions();
      questions();
        questionHandler.endInnerOperatorQuestions();
      jj_consume_token(26);
        questionHandler.endOperatorQuestion();
      break;
    case FILTER_OPERATOR:
      operator = jj_consume_token(FILTER_OPERATOR);
        questionHandler.startFilterQuestion();
      jj_consume_token(25);
        questionHandler.startInnerFilterQuestion();
      query();
        questionHandler.endInnerFilterQuestion();
      if (jj_2_7(3)) {
          questionHandler.startFilterKeyValuePair();
        jj_consume_token(27);
        if (jj_2_5(2)) {
            questionHandler.startFilterKeyQuery();
          query();
            questionHandler.endFilterKeyQuery();
        } else {
          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
          case STRING:
            key = jj_consume_token(STRING);
            questionHandler.setFilterKey(key.toString());
            break;
          default:
            jj_la1[16] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
        }
        jj_consume_token(20);
        if (jj_2_6(2)) {
            questionHandler.startFilterValueQuery();
          query();
            questionHandler.endFilterValueQuery();
        } else {
          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
          case STRING:
            value = jj_consume_token(STRING);
            questionHandler.setFilterValue(value.toString());
            break;
          default:
            jj_la1[17] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
        }
          questionHandler.endFilterKeyValuePair();
      } else {
        ;
      }
      if (jj_2_8(3)) {
          questionHandler.startFilterReference();
        jj_consume_token(27);
        reference();
          questionHandler.endFilterReference();
      } else {
        ;
      }
      if (jj_2_9(3)) {
        jj_consume_token(27);
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case SOIS1:
          soi = jj_consume_token(SOIS1);
          break;
        case SOIS2:
          soi = jj_consume_token(SOIS2);
          break;
        default:
          jj_la1[18] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
          questionHandler.setFilterSubjectOfInterest(soi.toString());
      } else {
        ;
      }
      jj_consume_token(26);
        questionHandler.endFilterQuestion();
      break;
    case CUSTOM_OPERATORS:
      operator = jj_consume_token(CUSTOM_OPERATORS);
        questionHandler.startOperatorQuestion(operator.toString());
      jj_consume_token(25);
        questionHandler.startInnerOperatorQuestions();
      questions();
        questionHandler.endInnerOperatorQuestions();
      jj_consume_token(26);
        questionHandler.endOperatorQuestion();
      break;
    default:
      jj_la1[19] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void defaultQuestion() throws ParseException {
  Token soi;
    questionHandler.startDefaultQuestion();
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case SOIS1:
      soi = jj_consume_token(SOIS1);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FROM:
      case TO:
        fromTo();
        break;
      case IN:
        in();
        break;
      default:
        jj_la1[20] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
        questionHandler.setSubjectOfInterest(soi.toString());
      break;
    case SOIS2:
      soi = jj_consume_token(SOIS2);
      in();
        questionHandler.setSubjectOfInterest(soi.toString());
      break;
    default:
      jj_la1[21] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    questionHandler.endDefaultQuestion();
  }

  final public void fromTo() throws ParseException {
    if (jj_2_10(42)) {
      from();
      to();
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FROM:
        from();
        break;
      case TO:
        to();
        break;
      default:
        jj_la1[22] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
  }

  final public void from() throws ParseException {
    questionHandler.startFrom();
    jj_consume_token(FROM);
    reference();
    questionHandler.endFrom();
  }

  final public void to() throws ParseException {
    questionHandler.startTo();
    jj_consume_token(TO);
    reference();
    questionHandler.endTo();
  }

  final public void in() throws ParseException {
    questionHandler.startIn();
    jj_consume_token(IN);
    reference();
    questionHandler.endIn();
  }

  final public void reference() throws ParseException {
  Token statement;
  Token lineNumber;
  Token method;
  Token classname;
  Token app;
    questionHandler.startReference();
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 28:
      jj_consume_token(28);
      jj_consume_token(29);
      if (jj_2_11(4)) {
        statement = jj_consume_token(STRING);
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 24:
          jj_consume_token(24);
          lineNumber = jj_consume_token(INT);
            questionHandler.setLineNumber(lineNumber.toString());
          break;
        default:
          jj_la1[23] = jj_gen;
          ;
        }
          questionHandler.setStatement(statement.toString());
      } else {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case FILTER_OPERATOR:
        case OTHER_OPERATORS:
        case CUSTOM_OPERATORS:
        case SOIS1:
        case SOIS2:
        case STRING:
        case 21:
        case 23:
          questionHandler.startStatementQuery();
          query();
          questionHandler.endStatementQuery();
          break;
        default:
          jj_la1[24] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
      jj_consume_token(30);
      jj_consume_token(31);
      break;
    default:
      jj_la1[25] = jj_gen;
      ;
    }
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 32:
      jj_consume_token(32);
      jj_consume_token(29);
      if (jj_2_12(2)) {
        method = jj_consume_token(STRING);
          questionHandler.setMethod(method.toString());
      } else {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case FILTER_OPERATOR:
        case OTHER_OPERATORS:
        case CUSTOM_OPERATORS:
        case SOIS1:
        case SOIS2:
        case STRING:
        case 21:
        case 23:
          questionHandler.startMethodQuery();
          query();
          questionHandler.endMethodQuery();
          break;
        default:
          jj_la1[26] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
      jj_consume_token(30);
      jj_consume_token(31);
      break;
    default:
      jj_la1[27] = jj_gen;
      ;
    }
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 33:
      jj_consume_token(33);
      jj_consume_token(29);
      if (jj_2_13(2)) {
        classname = jj_consume_token(STRING);
          questionHandler.setClass(classname.toString());
      } else {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case FILTER_OPERATOR:
        case OTHER_OPERATORS:
        case CUSTOM_OPERATORS:
        case SOIS1:
        case SOIS2:
        case STRING:
        case 21:
        case 23:
          questionHandler.startClassQuery();
          query();
          questionHandler.endClassQuery();
          break;
        default:
          jj_la1[28] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
      jj_consume_token(30);
      jj_consume_token(31);
      break;
    default:
      jj_la1[29] = jj_gen;
      ;
    }
    jj_consume_token(34);
    jj_consume_token(29);
    if (jj_2_14(2)) {
      app = jj_consume_token(STRING);
        questionHandler.setApp(app.toString());
      appEnd();
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FILTER_OPERATOR:
      case OTHER_OPERATORS:
      case CUSTOM_OPERATORS:
      case SOIS1:
      case SOIS2:
      case STRING:
      case 21:
      case 23:
        questionHandler.startAppQuery();
        query();
        questionHandler.endAppQuery();
        appEnd();
        break;
      default:
        jj_la1[30] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    questionHandler.endReference();
  }

  final public void appEnd() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 27:
      preprocessors();
      break;
    default:
      jj_la1[31] = jj_gen;
      ;
    }
    jj_consume_token(30);
  }

  final public void preprocessors() throws ParseException {
    preprocessor();
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 27:
      preprocessors();
      break;
    default:
      jj_la1[32] = jj_gen;
      ;
    }
  }

  final public void preprocessor() throws ParseException {
  Token keyword;
    jj_consume_token(27);
    if (jj_2_15(2)) {
      keyword = jj_consume_token(STRING);
        questionHandler.setKeyword(keyword.toString());
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case FILTER_OPERATOR:
      case OTHER_OPERATORS:
      case CUSTOM_OPERATORS:
      case SOIS1:
      case SOIS2:
      case STRING:
      case 21:
      case 23:
        questionHandler.startKeywordQuery();
        query();
        questionHandler.endKeywordQuery();
        break;
      default:
        jj_la1[33] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
  }

  private boolean jj_2_1(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_1(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(0, xla); }
  }

  private boolean jj_2_2(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_2(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(1, xla); }
  }

  private boolean jj_2_3(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_3(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(2, xla); }
  }

  private boolean jj_2_4(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_4(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(3, xla); }
  }

  private boolean jj_2_5(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_5(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(4, xla); }
  }

  private boolean jj_2_6(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_6(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(5, xla); }
  }

  private boolean jj_2_7(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_7(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(6, xla); }
  }

  private boolean jj_2_8(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_8(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(7, xla); }
  }

  private boolean jj_2_9(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_9(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(8, xla); }
  }

  private boolean jj_2_10(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_10(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(9, xla); }
  }

  private boolean jj_2_11(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_11(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(10, xla); }
  }

  private boolean jj_2_12(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_12(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(11, xla); }
  }

  private boolean jj_2_13(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_13(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(12, xla); }
  }

  private boolean jj_2_14(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_14(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(13, xla); }
  }

  private boolean jj_2_15(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_15(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(14, xla); }
  }

  private boolean jj_3R_42() {
    if (jj_scan_token(FEATURING)) return true;
    if (jj_3R_47()) return true;
    return false;
  }

  private boolean jj_3R_5() {
    if (jj_scan_token(FROM)) return true;
    if (jj_3R_4()) return true;
    return false;
  }

  private boolean jj_3R_37() {
    if (jj_3R_2()) return true;
    return false;
  }

  private boolean jj_3R_29() {
    if (jj_scan_token(STRING)) return true;
    return false;
  }

  private boolean jj_3R_25() {
    if (jj_3R_28()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_42()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3R_43()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3R_44()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_46() {
    if (jj_3R_6()) return true;
    return false;
  }

  private boolean jj_3R_45() {
    if (jj_3R_5()) return true;
    return false;
  }

  private boolean jj_3R_61() {
    if (jj_scan_token(24)) return true;
    if (jj_3R_56()) return true;
    return false;
  }

  private boolean jj_3R_24() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_25()) {
    jj_scanpos = xsp;
    if (jj_3R_26()) {
    jj_scanpos = xsp;
    if (jj_3R_27()) return true;
    }
    }
    if (jj_scan_token(ENDING)) return true;
    return false;
  }

  private boolean jj_3_15() {
    if (jj_scan_token(STRING)) return true;
    return false;
  }

  private boolean jj_3R_56() {
    if (jj_3R_2()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_61()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_10() {
    if (jj_3R_5()) return true;
    if (jj_3R_6()) return true;
    return false;
  }

  private boolean jj_3R_23() {
    if (jj_scan_token(27)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_15()) {
    jj_scanpos = xsp;
    if (jj_3R_37()) return true;
    }
    return false;
  }

  private boolean jj_3R_41() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_10()) {
    jj_scanpos = xsp;
    if (jj_3R_45()) {
    jj_scanpos = xsp;
    if (jj_3R_46()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_31() {
    if (jj_3R_17()) return true;
    return false;
  }

  private boolean jj_3R_19() {
    if (jj_scan_token(23)) return true;
    if (jj_scan_token(VARIABLE)) return true;
    return false;
  }

  private boolean jj_3R_18() {
    if (jj_3R_24()) return true;
    return false;
  }

  private boolean jj_3R_15() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_18()) {
    jj_scanpos = xsp;
    if (jj_3R_19()) return true;
    }
    return false;
  }

  private boolean jj_3R_17() {
    if (jj_3R_23()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_31()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_60() {
    if (jj_3R_2()) return true;
    return false;
  }

  private boolean jj_3R_33() {
    if (jj_scan_token(SOIS2)) return true;
    if (jj_3R_40()) return true;
    return false;
  }

  private boolean jj_3R_14() {
    if (jj_3R_17()) return true;
    return false;
  }

  private boolean jj_3R_39() {
    if (jj_3R_40()) return true;
    return false;
  }

  private boolean jj_3R_8() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_14()) jj_scanpos = xsp;
    if (jj_scan_token(30)) return true;
    return false;
  }

  private boolean jj_3R_38() {
    if (jj_3R_41()) return true;
    return false;
  }

  private boolean jj_3R_10() {
    if (jj_scan_token(21)) return true;
    if (jj_3R_15()) return true;
    if (jj_scan_token(22)) return true;
    return false;
  }

  private boolean jj_3_4() {
    if (jj_scan_token(STRING)) return true;
    return false;
  }

  private boolean jj_3R_9() {
    if (jj_3R_15()) return true;
    return false;
  }

  private boolean jj_3R_2() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_9()) {
    jj_scanpos = xsp;
    if (jj_3R_10()) return true;
    }
    return false;
  }

  private boolean jj_3R_32() {
    if (jj_scan_token(SOIS1)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_38()) {
    jj_scanpos = xsp;
    if (jj_3R_39()) return true;
    }
    return false;
  }

  private boolean jj_3R_28() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_32()) {
    jj_scanpos = xsp;
    if (jj_3R_33()) return true;
    }
    return false;
  }

  private boolean jj_3R_59() {
    if (jj_3R_2()) return true;
    return false;
  }

  private boolean jj_3R_16() {
    if (jj_3R_2()) return true;
    if (jj_3R_8()) return true;
    return false;
  }

  private boolean jj_3_3() {
    if (jj_scan_token(STRING)) return true;
    return false;
  }

  private boolean jj_3_14() {
    if (jj_scan_token(STRING)) return true;
    if (jj_3R_8()) return true;
    return false;
  }

  private boolean jj_3R_54() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_3()) {
    jj_scanpos = xsp;
    if (jj_3R_59()) return true;
    }
    if (jj_scan_token(20)) return true;
    xsp = jj_scanpos;
    if (jj_3_4()) {
    jj_scanpos = xsp;
    if (jj_3R_60()) return true;
    }
    return false;
  }

  private boolean jj_3R_55() {
    if (jj_scan_token(24)) return true;
    if (jj_3R_49()) return true;
    return false;
  }

  private boolean jj_3R_36() {
    if (jj_scan_token(CUSTOM_OPERATORS)) return true;
    if (jj_scan_token(25)) return true;
    if (jj_3R_56()) return true;
    if (jj_scan_token(26)) return true;
    return false;
  }

  private boolean jj_3R_22() {
    if (jj_3R_2()) return true;
    return false;
  }

  private boolean jj_3R_49() {
    if (jj_3R_54()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_55()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_13() {
    if (jj_scan_token(STRING)) return true;
    return false;
  }

  private boolean jj_3_9() {
    if (jj_scan_token(27)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(15)) {
    jj_scanpos = xsp;
    if (jj_scan_token(16)) return true;
    }
    return false;
  }

  private boolean jj_3R_13() {
    if (jj_scan_token(33)) return true;
    if (jj_scan_token(29)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_13()) {
    jj_scanpos = xsp;
    if (jj_3R_22()) return true;
    }
    if (jj_scan_token(30)) return true;
    if (jj_scan_token(31)) return true;
    return false;
  }

  private boolean jj_3R_58() {
    if (jj_3R_2()) return true;
    return false;
  }

  private boolean jj_3_8() {
    if (jj_scan_token(27)) return true;
    if (jj_3R_4()) return true;
    return false;
  }

  private boolean jj_3_2() {
    if (jj_scan_token(STRING)) return true;
    return false;
  }

  private boolean jj_3R_21() {
    if (jj_3R_2()) return true;
    return false;
  }

  private boolean jj_3R_52() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_2()) {
    jj_scanpos = xsp;
    if (jj_3R_58()) return true;
    }
    return false;
  }

  private boolean jj_3R_62() {
    if (jj_scan_token(STRING)) return true;
    return false;
  }

  private boolean jj_3_12() {
    if (jj_scan_token(STRING)) return true;
    return false;
  }

  private boolean jj_3R_53() {
    if (jj_scan_token(24)) return true;
    if (jj_3R_48()) return true;
    return false;
  }

  private boolean jj_3R_12() {
    if (jj_scan_token(32)) return true;
    if (jj_scan_token(29)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_12()) {
    jj_scanpos = xsp;
    if (jj_3R_21()) return true;
    }
    if (jj_scan_token(30)) return true;
    if (jj_scan_token(31)) return true;
    return false;
  }

  private boolean jj_3R_48() {
    if (jj_3R_52()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_53()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_6() {
    if (jj_3R_2()) return true;
    return false;
  }

  private boolean jj_3R_3() {
    if (jj_scan_token(STRING)) return true;
    return false;
  }

  private boolean jj_3R_20() {
    if (jj_3R_2()) return true;
    return false;
  }

  private boolean jj_3R_57() {
    if (jj_3R_2()) return true;
    return false;
  }

  private boolean jj_3_5() {
    if (jj_3R_2()) return true;
    return false;
  }

  private boolean jj_3R_7() {
    if (jj_scan_token(24)) return true;
    if (jj_scan_token(INT)) return true;
    return false;
  }

  private boolean jj_3_1() {
    if (jj_scan_token(STRING)) return true;
    return false;
  }

  private boolean jj_3_7() {
    if (jj_scan_token(27)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_5()) {
    jj_scanpos = xsp;
    if (jj_3R_3()) return true;
    }
    if (jj_scan_token(20)) return true;
    xsp = jj_scanpos;
    if (jj_3_6()) {
    jj_scanpos = xsp;
    if (jj_3R_62()) return true;
    }
    return false;
  }

  private boolean jj_3_11() {
    if (jj_scan_token(STRING)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_7()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_50() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_1()) {
    jj_scanpos = xsp;
    if (jj_3R_57()) return true;
    }
    return false;
  }

  private boolean jj_3R_11() {
    if (jj_scan_token(28)) return true;
    if (jj_scan_token(29)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_11()) {
    jj_scanpos = xsp;
    if (jj_3R_20()) return true;
    }
    if (jj_scan_token(30)) return true;
    if (jj_scan_token(31)) return true;
    return false;
  }

  private boolean jj_3R_51() {
    if (jj_scan_token(24)) return true;
    if (jj_3R_47()) return true;
    return false;
  }

  private boolean jj_3R_4() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_11()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3R_12()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3R_13()) jj_scanpos = xsp;
    if (jj_scan_token(34)) return true;
    if (jj_scan_token(29)) return true;
    xsp = jj_scanpos;
    if (jj_3_14()) {
    jj_scanpos = xsp;
    if (jj_3R_16()) return true;
    }
    return false;
  }

  private boolean jj_3R_47() {
    if (jj_3R_50()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_51()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_35() {
    if (jj_scan_token(FILTER_OPERATOR)) return true;
    if (jj_scan_token(25)) return true;
    if (jj_3R_2()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_7()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3_8()) jj_scanpos = xsp;
    xsp = jj_scanpos;
    if (jj_3_9()) jj_scanpos = xsp;
    if (jj_scan_token(26)) return true;
    return false;
  }

  private boolean jj_3R_27() {
    if (jj_3R_30()) return true;
    return false;
  }

  private boolean jj_3R_26() {
    if (jj_3R_29()) return true;
    return false;
  }

  private boolean jj_3R_40() {
    if (jj_scan_token(IN)) return true;
    if (jj_3R_4()) return true;
    return false;
  }

  private boolean jj_3R_44() {
    if (jj_scan_token(WITH)) return true;
    if (jj_3R_49()) return true;
    return false;
  }

  private boolean jj_3R_34() {
    if (jj_scan_token(OTHER_OPERATORS)) return true;
    if (jj_scan_token(25)) return true;
    if (jj_3R_56()) return true;
    if (jj_scan_token(26)) return true;
    return false;
  }

  private boolean jj_3R_30() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_34()) {
    jj_scanpos = xsp;
    if (jj_3R_35()) {
    jj_scanpos = xsp;
    if (jj_3R_36()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_6() {
    if (jj_scan_token(TO)) return true;
    if (jj_3R_4()) return true;
    return false;
  }

  private boolean jj_3R_43() {
    if (jj_scan_token(USES)) return true;
    if (jj_3R_48()) return true;
    return false;
  }

  /** Generated Token Manager. */
  public QuestionParserTokenManager token_source;
  SimpleCharStream jj_input_stream;
  /** Current token. */
  public Token token;
  /** Next token. */
  public Token jj_nt;
  private int jj_ntk;
  private Token jj_scanpos, jj_lastpos;
  private int jj_la;
  private int jj_gen;
  final private int[] jj_la1 = new int[34];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static {
      jj_la1_init_0();
      jj_la1_init_1();
   }
   private static void jj_la1_init_0() {
      jj_la1_0 = new int[] {0xa5f800,0xa5f800,0xa5b800,0x85b800,0x100,0x200,0x400,0x5b800,0x1000000,0xa5b800,0x1000000,0xa5b800,0x1000000,0xa5b800,0xa5b800,0x1000000,0x40000,0x40000,0x18000,0x3800,0xe0,0x18000,0xc0,0x1000000,0xa5b800,0x10000000,0xa5b800,0x0,0xa5b800,0x0,0xa5b800,0x8000000,0x8000000,0xa5b800,};
   }
   private static void jj_la1_init_1() {
      jj_la1_1 = new int[] {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x2,0x0,0x0,0x0,0x0,};
   }
  final private JJCalls[] jj_2_rtns = new JJCalls[15];
  private boolean jj_rescan = false;
  private int jj_gc = 0;

  /** Constructor with InputStream. */
  public QuestionParser(java.io.InputStream stream) {
     this(stream, null);
  }
  /** Constructor with InputStream and supplied encoding */
  public QuestionParser(java.io.InputStream stream, String encoding) {
    try { jj_input_stream = new SimpleCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source = new QuestionParserTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 34; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream) {
     ReInit(stream, null);
  }
  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream, String encoding) {
    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 34; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor. */
  public QuestionParser(java.io.Reader stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new QuestionParserTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 34; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.Reader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 34; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor with generated Token Manager. */
  public QuestionParser(QuestionParserTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 34; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(QuestionParserTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 34; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  private Token jj_consume_token(int kind) throws ParseException {
    Token oldToken;
    if ((oldToken = token).next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    if (token.kind == kind) {
      jj_gen++;
      if (++jj_gc > 100) {
        jj_gc = 0;
        for (int i = 0; i < jj_2_rtns.length; i++) {
          JJCalls c = jj_2_rtns[i];
          while (c != null) {
            if (c.gen < jj_gen) c.first = null;
            c = c.next;
          }
        }
      }
      return token;
    }
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }

  static private final class LookaheadSuccess extends java.lang.Error { }
  final private LookaheadSuccess jj_ls = new LookaheadSuccess();
  private boolean jj_scan_token(int kind) {
    if (jj_scanpos == jj_lastpos) {
      jj_la--;
      if (jj_scanpos.next == null) {
        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
      } else {
        jj_lastpos = jj_scanpos = jj_scanpos.next;
      }
    } else {
      jj_scanpos = jj_scanpos.next;
    }
    if (jj_rescan) {
      int i = 0; Token tok = token;
      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }
      if (tok != null) jj_add_error_token(kind, i);
    }
    if (jj_scanpos.kind != kind) return true;
    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
    return false;
  }


/** Get the next Token. */
  final public Token getNextToken() {
    if (token.next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    jj_gen++;
    return token;
  }

/** Get the specific Token. */
  final public Token getToken(int index) {
    Token t = token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  private int jj_ntk() {
    if ((jj_nt=token.next) == null)
      return (jj_ntk = (token.next=token_source.getNextToken()).kind);
    else
      return (jj_ntk = jj_nt.kind);
  }

  private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  private int[] jj_expentry;
  private int jj_kind = -1;
  private int[] jj_lasttokens = new int[100];
  private int jj_endpos;

  private void jj_add_error_token(int kind, int pos) {
    if (pos >= 100) return;
    if (pos == jj_endpos + 1) {
      jj_lasttokens[jj_endpos++] = kind;
    } else if (jj_endpos != 0) {
      jj_expentry = new int[jj_endpos];
      for (int i = 0; i < jj_endpos; i++) {
        jj_expentry[i] = jj_lasttokens[i];
      }
      jj_entries_loop: for (java.util.Iterator<?> it = jj_expentries.iterator(); it.hasNext();) {
        int[] oldentry = (int[])(it.next());
        if (oldentry.length == jj_expentry.length) {
          for (int i = 0; i < jj_expentry.length; i++) {
            if (oldentry[i] != jj_expentry[i]) {
              continue jj_entries_loop;
            }
          }
          jj_expentries.add(jj_expentry);
          break jj_entries_loop;
        }
      }
      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;
    }
  }

  /** Generate ParseException. */
  public ParseException generateParseException() {
    jj_expentries.clear();
    boolean[] la1tokens = new boolean[35];
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 34; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 35; i++) {
      if (la1tokens[i]) {
        jj_expentry = new int[1];
        jj_expentry[0] = i;
        jj_expentries.add(jj_expentry);
      }
    }
    jj_endpos = 0;
    jj_rescan_token();
    jj_add_error_token(0, 0);
    int[][] exptokseq = new int[jj_expentries.size()][];
    for (int i = 0; i < jj_expentries.size(); i++) {
      exptokseq[i] = jj_expentries.get(i);
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  /** Enable tracing. */
  final public void enable_tracing() {
  }

  /** Disable tracing. */
  final public void disable_tracing() {
  }

  private void jj_rescan_token() {
    jj_rescan = true;
    for (int i = 0; i < 15; i++) {
    try {
      JJCalls p = jj_2_rtns[i];
      do {
        if (p.gen > jj_gen) {
          jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;
          switch (i) {
            case 0: jj_3_1(); break;
            case 1: jj_3_2(); break;
            case 2: jj_3_3(); break;
            case 3: jj_3_4(); break;
            case 4: jj_3_5(); break;
            case 5: jj_3_6(); break;
            case 6: jj_3_7(); break;
            case 7: jj_3_8(); break;
            case 8: jj_3_9(); break;
            case 9: jj_3_10(); break;
            case 10: jj_3_11(); break;
            case 11: jj_3_12(); break;
            case 12: jj_3_13(); break;
            case 13: jj_3_14(); break;
            case 14: jj_3_15(); break;
          }
        }
        p = p.next;
      } while (p != null);
      } catch(LookaheadSuccess ls) { }
    }
    jj_rescan = false;
  }

  private void jj_save(int index, int xla) {
    JJCalls p = jj_2_rtns[index];
    while (p.gen > jj_gen) {
      if (p.next == null) { p = p.next = new JJCalls(); break; }
      p = p.next;
    }
    p.gen = jj_gen + xla - jj_la; p.first = token; p.arg = xla;
  }

  static final class JJCalls {
    int gen;
    Token first;
    int arg;
    JJCalls next;
  }

}
